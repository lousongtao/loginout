<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zheng.ucenter.rpc.mapper.UcenterApiMapper">
    <!-- 排班表 -->
    <resultMap id="scheduleResultMap" type="com.zheng.ucenter.dao.model.McSchedulePlan">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="u_id" jdbcType="INTEGER" property="uId"/>
        <result column="u_name" jdbcType="VARCHAR" property="uName"/>
        <result column="group_id" jdbcType="INTEGER" property="groupId"/>
        <result column="per_salary" jdbcType="BIGINT" property="perSalary"/>
        <result column="scheduling_date" jdbcType="DATE" property="schedulingDate"/>
        <result column="period_time" jdbcType="VARCHAR" property="periodTime"/>
        <result column="total_time" jdbcType="DECIMAL" property="totalTime"/>
        <result column="estimate_pay" jdbcType="BIGINT" property="estimatePay"/>
        <result column="result" jdbcType="INTEGER" property="result"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <!-- 排班,单元格扩展 -->
    <resultMap id="schedulingCell" type="com.zheng.ucenter.dao.vo.McSchedulingCell" extends="scheduleResultMap">
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="color" jdbcType="VARCHAR" property="color"/>
    </resultMap>
    <!-- 员工签到 -->
    <resultMap id="signResultMap" type="com.zheng.ucenter.dao.model.McUserSign">
        <id column="sign_id" jdbcType="BIGINT" property="signId"/>
        <result column="u_id" jdbcType="INTEGER" property="uId"/>
        <result column="u_name" jdbcType="VARCHAR" property="uName"/>
        <result column="sign_time" jdbcType="TIMESTAMP" property="signTime"/>
        <result column="sign_type" jdbcType="INTEGER" property="signType"/>
        <result column="lon" jdbcType="DECIMAL" property="lon"/>
        <result column="lat" jdbcType="DECIMAL" property="lat"/>
        <result column="sign_address" jdbcType="VARCHAR" property="signAddress"/>
        <result column="extend1" jdbcType="VARCHAR" property="extend1"/>
        <result column="extend2" jdbcType="VARCHAR" property="extend2"/>
        <result column="extend3" jdbcType="VARCHAR" property="extend3"/>
    </resultMap>
    <!-- 插入排班数据到指定表 -->
    <insert id="insertScheduleData">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into mc_schedule_plan_${mcId}_copy (u_id, u_name, group_id,
        per_salary, scheduling_date, period_time,
        total_time, estimate_pay, result,
        create_time, update_time)
        values (#{record.uId,jdbcType=INTEGER}, #{record.uName,jdbcType=VARCHAR}, #{record.groupId,jdbcType=INTEGER},
        #{record.perSalary,jdbcType=BIGINT}, #{record.schedulingDate,jdbcType=DATE},
        #{record.periodTime,jdbcType=VARCHAR},
        #{record.totalTime,jdbcType=DECIMAL}, #{record.estimatePay,jdbcType=BIGINT}, #{record.result,jdbcType=INTEGER},
        #{record.createTime,jdbcType=TIMESTAMP}, #{record.updateTime,jdbcType=TIMESTAMP})
    </insert>
    <!-- 修改排班数据-->
    <update id="updateScheduleDataSelective">
        update mc_schedule_plan_${mcId}_copy
        <set>
            <if test="record.uId != null">
                u_id = #{record.uId,jdbcType=INTEGER},
            </if>
            <if test="record.uName != null">
                u_name = #{record.uName,jdbcType=VARCHAR},
            </if>
            <if test="record.groupId != null">
                group_id = #{record.groupId,jdbcType=INTEGER},
            </if>
            <if test="record.perSalary != null">
                per_salary = #{record.perSalary,jdbcType=BIGINT},
            </if>
            <if test="record.schedulingDate != null">
                scheduling_date = #{record.schedulingDate,jdbcType=DATE},
            </if>
            <if test="record.periodTime != null">
                period_time = #{record.periodTime,jdbcType=VARCHAR},
            </if>
            <if test="record.totalTime != null">
                total_time = #{record.totalTime,jdbcType=DECIMAL},
            </if>
            <if test="record.estimatePay != null">
                estimate_pay = #{record.estimatePay,jdbcType=BIGINT},
            </if>
            <if test="record.result != null">
                result = #{record.result,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <where>
            id=#{record.id,jdbcType=INTEGER}
        </where>
    </update>
    <!-- 主键删除 -->
    <delete id="deleteScheduleDataByPrimaryKey">
        delete from mc_schedule_plan_${mcId}_copy
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <!-- 批量删除 -->
    <delete id="batchDeleteScheduleData">
        delete from mc_schedule_plan_${mcId}_copy
        <if test="idArray != null">
            WHERE id in
            <foreach item="item" index="index" collection="idArray" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>

    </delete>

    <!-- 主键查询 -->
    <select id="selectScheduleDataByPrimaryKey" resultMap="scheduleResultMap">
        select * from mc_schedule_plan_${mcId}_copy
        where id = #{id,jdbcType=INTEGER}
    </select>
    <!-- 时间条件查询-->
    <select id="selectSchedulingDataByDate" resultMap="schedulingCell">
        select p.id,p.u_id,p.u_name,p.group_id,p.per_salary,p.scheduling_date,p.period_time,p.total_time,
              p.estimate_pay,p.result,p.create_time,p.update_time,g.name,g.color
         from mc_schedule_plan_${mcId}_copy AS p LEFT JOIN mc_group g ON p.group_id=g.id
        where scheduling_date &gt;= #{startDate,jdbcType=DATE} AND scheduling_date &lt;= #{endDate,jdbcType=DATE}
    </select>

    <!-- 员工查看自己的排班数据 -->
    <select id="selectStaffData" resultMap="schedulingCell">
        select p.id,p.u_id,p.u_name,p.group_id,p.per_salary,p.scheduling_date,p.period_time,p.total_time,
              p.estimate_pay,p.result,p.create_time,p.update_time,g.name,g.color
          from mc_schedule_plan_${parentId}_copy AS p LEFT JOIN mc_group g ON p.group_id=g.id
      WHERE u_id=#{uId,jdbcType=INTEGER} AND
       scheduling_date &gt;= #{startDate,jdbcType=DATE} AND
        scheduling_date &lt;= #{endDate,jdbcType=DATE}
        ORDER BY scheduling_date DESC ;
    </select>

    <!-- 员工签到 -->
    <insert id="insertSignRecord">
        insert into mc_user_sign_${parentId}_copy (sign_id,u_id, u_name, sign_time,
      sign_type, lon, lat,
      sign_address, extend1, extend2,
      extend3)
    values (#{record.signId,jdbcType=BIGINT},#{record.uId,jdbcType=INTEGER}, #{record.uName,jdbcType=VARCHAR}, #{record.signTime,jdbcType=TIMESTAMP},
      #{record.signType,jdbcType=INTEGER}, #{record.lon,jdbcType=DECIMAL}, #{record.lat,jdbcType=DECIMAL},
      #{record.signAddress,jdbcType=VARCHAR}, #{record.extend1,jdbcType=VARCHAR}, #{record.extend2,jdbcType=VARCHAR},
      #{record.extend3,jdbcType=VARCHAR})
    </insert>

    <!-- 查询签到数据 -->
    <select id="selectSignRecordByExample" resultMap="signResultMap">
        select sign_id, u_id, u_name, sign_time, sign_type, lon, lat, sign_address, extend1, extend2,extend3
        FROM mc_user_sign_${parentId}_copy
        <if test="_parameter != null">
            <where>
                <foreach collection="example.oredCriteria" item="criteria" separator="or">
                    <if test="criteria.valid">
                        <trim prefix="(" prefixOverrides="and" suffix=")">
                            <foreach collection="criteria.criteria" item="criterion">
                                <choose>
                                    <when test="criterion.noValue">
                                        and ${criterion.condition}
                                    </when>
                                    <when test="criterion.singleValue">
                                        and ${criterion.condition} #{criterion.value}
                                    </when>
                                    <when test="criterion.betweenValue">
                                        and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                    </when>
                                    <when test="criterion.listValue">
                                        and ${criterion.condition}
                                        <foreach close=")" collection="criterion.value" item="listItem" open="("
                                                 separator=",">
                                            #{listItem}
                                        </foreach>
                                    </when>
                                </choose>
                            </foreach>
                        </trim>
                    </if>
                </foreach>
            </where>
        </if>
        <if test="example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
    </select>

    <select id="countSignRecordByExample" resultType="java.lang.Long">
        select count(*) from mc_user_sign_${parentId}_copy
        <if test="_parameter != null">
            <where>
                <foreach collection="example.oredCriteria" item="criteria" separator="or">
                    <if test="criteria.valid">
                        <trim prefix="(" prefixOverrides="and" suffix=")">
                            <foreach collection="criteria.criteria" item="criterion">
                                <choose>
                                    <when test="criterion.noValue">
                                        and ${criterion.condition}
                                    </when>
                                    <when test="criterion.singleValue">
                                        and ${criterion.condition} #{criterion.value}
                                    </when>
                                    <when test="criterion.betweenValue">
                                        and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                    </when>
                                    <when test="criterion.listValue">
                                        and ${criterion.condition}
                                        <foreach close=")" collection="criterion.value" item="listItem" open="("
                                                 separator=",">
                                            #{listItem}
                                        </foreach>
                                    </when>
                                </choose>
                            </foreach>
                        </trim>
                    </if>
                </foreach>
            </where>
        </if>
    </select>

    <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
</mapper>