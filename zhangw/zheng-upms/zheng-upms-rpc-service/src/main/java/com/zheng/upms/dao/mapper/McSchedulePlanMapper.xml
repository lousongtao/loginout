<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zheng.upms.dao.mapper.McSchedulePlanMapper">
  <resultMap id="BaseResultMap" type="com.zheng.upms.dao.model.McSchedulePlan">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="u_id" jdbcType="INTEGER" property="uId" />
    <result column="u_name" jdbcType="VARCHAR" property="uName" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="per_salary" jdbcType="DOUBLE" property="perSalary" />
    <result column="scheduling_date" jdbcType="DATE" property="schedulingDate" />
    <result column="period_time" jdbcType="VARCHAR" property="periodTime" />
    <result column="total_time" jdbcType="DOUBLE" property="totalTime" />
    <result column="estimate_pay" jdbcType="DOUBLE" property="estimatePay" />
    <result column="result" jdbcType="INTEGER" property="result" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="branch_id" jdbcType="INTEGER" property="branchId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, u_id, u_name, group_id, per_salary, scheduling_date, period_time, total_time, 
    estimate_pay, result, create_time, update_time, branch_id
  </sql>
  <select id="selectByExample" parameterType="com.zheng.upms.dao.model.McSchedulePlanExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mc_schedule_plan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mc_schedule_plan
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mc_schedule_plan
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zheng.upms.dao.model.McSchedulePlanExample">
    delete from mc_schedule_plan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zheng.upms.dao.model.McSchedulePlan">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into mc_schedule_plan (u_id, u_name, group_id, 
      per_salary, scheduling_date, period_time, 
      total_time, estimate_pay, result, 
      create_time, update_time, branch_id
      )
    values (#{uId,jdbcType=INTEGER}, #{uName,jdbcType=VARCHAR}, #{groupId,jdbcType=INTEGER}, 
      #{perSalary,jdbcType=DOUBLE}, #{schedulingDate,jdbcType=DATE}, #{periodTime,jdbcType=VARCHAR}, 
      #{totalTime,jdbcType=DOUBLE}, #{estimatePay,jdbcType=DOUBLE}, #{result,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{branchId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zheng.upms.dao.model.McSchedulePlan">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into mc_schedule_plan
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uId != null">
        u_id,
      </if>
      <if test="uName != null">
        u_name,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="perSalary != null">
        per_salary,
      </if>
      <if test="schedulingDate != null">
        scheduling_date,
      </if>
      <if test="periodTime != null">
        period_time,
      </if>
      <if test="totalTime != null">
        total_time,
      </if>
      <if test="estimatePay != null">
        estimate_pay,
      </if>
      <if test="result != null">
        result,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uId != null">
        #{uId,jdbcType=INTEGER},
      </if>
      <if test="uName != null">
        #{uName,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="perSalary != null">
        #{perSalary,jdbcType=DOUBLE},
      </if>
      <if test="schedulingDate != null">
        #{schedulingDate,jdbcType=DATE},
      </if>
      <if test="periodTime != null">
        #{periodTime,jdbcType=VARCHAR},
      </if>
      <if test="totalTime != null">
        #{totalTime,jdbcType=DOUBLE},
      </if>
      <if test="estimatePay != null">
        #{estimatePay,jdbcType=DOUBLE},
      </if>
      <if test="result != null">
        #{result,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zheng.upms.dao.model.McSchedulePlanExample" resultType="java.lang.Long">
    select count(*) from mc_schedule_plan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mc_schedule_plan
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uId != null">
        u_id = #{record.uId,jdbcType=INTEGER},
      </if>
      <if test="record.uName != null">
        u_name = #{record.uName,jdbcType=VARCHAR},
      </if>
      <if test="record.groupId != null">
        group_id = #{record.groupId,jdbcType=INTEGER},
      </if>
      <if test="record.perSalary != null">
        per_salary = #{record.perSalary,jdbcType=DOUBLE},
      </if>
      <if test="record.schedulingDate != null">
        scheduling_date = #{record.schedulingDate,jdbcType=DATE},
      </if>
      <if test="record.periodTime != null">
        period_time = #{record.periodTime,jdbcType=VARCHAR},
      </if>
      <if test="record.totalTime != null">
        total_time = #{record.totalTime,jdbcType=DOUBLE},
      </if>
      <if test="record.estimatePay != null">
        estimate_pay = #{record.estimatePay,jdbcType=DOUBLE},
      </if>
      <if test="record.result != null">
        result = #{record.result,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.branchId != null">
        branch_id = #{record.branchId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mc_schedule_plan
    set id = #{record.id,jdbcType=INTEGER},
      u_id = #{record.uId,jdbcType=INTEGER},
      u_name = #{record.uName,jdbcType=VARCHAR},
      group_id = #{record.groupId,jdbcType=INTEGER},
      per_salary = #{record.perSalary,jdbcType=DOUBLE},
      scheduling_date = #{record.schedulingDate,jdbcType=DATE},
      period_time = #{record.periodTime,jdbcType=VARCHAR},
      total_time = #{record.totalTime,jdbcType=DOUBLE},
      estimate_pay = #{record.estimatePay,jdbcType=DOUBLE},
      result = #{record.result,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      branch_id = #{record.branchId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zheng.upms.dao.model.McSchedulePlan">
    update mc_schedule_plan
    <set>
      <if test="uId != null">
        u_id = #{uId,jdbcType=INTEGER},
      </if>
      <if test="uName != null">
        u_name = #{uName,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="perSalary != null">
        per_salary = #{perSalary,jdbcType=DOUBLE},
      </if>
      <if test="schedulingDate != null">
        scheduling_date = #{schedulingDate,jdbcType=DATE},
      </if>
      <if test="periodTime != null">
        period_time = #{periodTime,jdbcType=VARCHAR},
      </if>
      <if test="totalTime != null">
        total_time = #{totalTime,jdbcType=DOUBLE},
      </if>
      <if test="estimatePay != null">
        estimate_pay = #{estimatePay,jdbcType=DOUBLE},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="branchId != null">
        branch_id = #{branchId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zheng.upms.dao.model.McSchedulePlan">
    update mc_schedule_plan
    set u_id = #{uId,jdbcType=INTEGER},
      u_name = #{uName,jdbcType=VARCHAR},
      group_id = #{groupId,jdbcType=INTEGER},
      per_salary = #{perSalary,jdbcType=DOUBLE},
      scheduling_date = #{schedulingDate,jdbcType=DATE},
      period_time = #{periodTime,jdbcType=VARCHAR},
      total_time = #{totalTime,jdbcType=DOUBLE},
      estimate_pay = #{estimatePay,jdbcType=DOUBLE},
      result = #{result,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      branch_id = #{branchId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>